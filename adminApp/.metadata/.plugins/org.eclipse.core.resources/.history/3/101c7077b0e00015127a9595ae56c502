package partwhere.admin.gui;

import org.eclipse.swt.widgets.Composite;

import partwhere.admin.sql.DataManager;
import partwhere.admin.sql.PartType;


public class PartTypeEditorPanel extends Composite{
	private PartType partType = null;
	

	/**
	 * Create the panel.
	 */
	public PartTypeEditorPanel() {


	}

	public String getTextName() {
//		return textName.getText();
	}

	public void setTextName(String textName) {
	//	this.textName.setText(textName);
	}

	public String getTextImgPath() {
	//	return textImgPath.getText();
	}

	public void setTextImgPath(String textImgPath) {
	//	this.textImgPath.setText(textImgPath);
	}

	public void setLblBaseImagePathValue(String baseImagePathValue) {
	//	this.lblBaseImagePathValue.setText(baseImagePathValue);
	}

	public PartType getPartType() {
		return partType;
	}

	public void setPartType(PartType partType) {
		this.partType = partType;
		setTextName(partType.getName());
	}

	public void setApplyEnabled()
	{
//		btnApply.setEnabled(!textName.getText().isEmpty() &&
//				(nameChanged() || imgPathChanged()));
	}
	
	private boolean nameChanged()
	{
		String curName = partType.getName();
		String newName = textName.getText();
		return (curName != null && newName.compareTo(curName) != 0) ||
			(curName == null && !newName.isEmpty());	
	}

	private boolean imgPathChanged()
	{
		String curPath = partType.getImagePath();
		String newPath = textImgPath.getText();
		return (curPath != null && newPath.compareTo(curPath) != 0) ||
			(curPath == null && !newPath.isEmpty());			
	}

	private void browseImagePath()
	{
		JFileChooser findImage = new JFileChooser();
		FileNameExtensionFilter filter = new FileNameExtensionFilter(
		        "Image Files", "jpg", "gif", "png");
		findImage.setFileFilter(filter);
		File basePath = new File(DataManager.getInstance().getBaseImagePath());
		if(basePath != null && basePath.exists())
		{
			findImage.setCurrentDirectory(basePath);
		}
	    int returnVal = findImage.showOpenDialog(this);
	    if(returnVal == JFileChooser.APPROVE_OPTION) {
	    	File selFile = findImage.getSelectedFile();
	    	if(selFile != null)
	    	{
		    	String imgPath = selFile.getPath() + selFile.getName();
		    	textImgPath.setText(imgPath);
		    	setApplyEnabled();
	    	}
	    }
	}
	private void cancelEdits()
	{
		// confirm?
		if(JOptionPane.showConfirmDialog(this, "Cancel edits?", 
				"Confirm Cancel", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION)
		{
			// reset values and disable apply
			textName.setText(partType.getName());
			textImgPath.setText(partType.getImagePath());
			setApplyEnabled();
		}
	}
	
	private void saveEdits()
	{
/*		boolean updatedName = nameChanged();
		if(updatedName)
		{
			partType.setName(textName.getText());
		}
		if(imgPathChanged())
		{
			partType.setImagePath(textImgPath.getText());
		}
		if(parent.updatePartType(partType, updatedName))
		{
			setApplyEnabled();
		}
		*/
	}
}
